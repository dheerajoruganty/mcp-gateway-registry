# =============================================================================
# MCP Gateway Registry - Environment Configuration Template
# =============================================================================
# Copy this file to .env and fill in your actual values
# The build_and_run.sh script will automatically generate a SECRET_KEY if not provided

# =============================================================================
# REGISTRY CONFIGURATION
# =============================================================================
# Registry URL - typically http://localhost:7860 for local development
REGISTRY_URL=http://localhost:7860

# Admin credentials for the web UI and API access
# Change these to secure values for production
ADMIN_USER=admin
ADMIN_PASSWORD=your-secure-password-here

# =============================================================================
# AUTH SERVER CONFIGURATION
# =============================================================================
# Internal auth server URL (used by containers to communicate)
AUTH_SERVER_URL=http://auth-server:8888

# External auth server URL (used by clients outside the container network)
# For local development: http://localhost:8888
# For production: https://your-domain.com or http://your-ec2-instance.amazonaws.com
AUTH_SERVER_EXTERNAL_URL=http://localhost:8888

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Secret key for session cookie signing and other cryptographic operations
# Will be auto-generated by build_and_run.sh if not provided
# To generate manually: python -c 'import secrets; print(secrets.token_hex(32))'
SECRET_KEY=

# =============================================================================
# AWS COGNITO OAUTH2 CONFIGURATION
# =============================================================================
# AWS region where your Cognito User Pool is located
AWS_REGION=us-east-1

# Cognito User Pool ID - found in AWS Console under Cognito User Pools
# Format: us-east-1_XXXXXXXXX
COGNITO_USER_POOL_ID=your-cognito-user-pool-id-here

# Cognito App Client ID - found in your User Pool's App Clients section
COGNITO_CLIENT_ID=your-cognito-client-id-here

# Cognito App Client Secret - found in your User Pool's App Clients section
# Note: Only required if your app client has a secret configured
COGNITO_CLIENT_SECRET=your-cognito-client-secret-here

# =============================================================================
# GITHUB OAUTH CONFIGURATION (Optional)
# =============================================================================
# GitHub OAuth App credentials - only needed if using GitHub authentication
# Leave empty if only using Cognito authentication
GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=

# =============================================================================
# EXTERNAL API KEYS
# =============================================================================
# For Financial Info MCP server API keys, see servers/fininfo/README_SECRETS.md
# Configure client-specific Polygon API keys in servers/fininfo/.keys.yml

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
# 1. Copy this file: cp .env.template .env
# 2. Fill in the required values above
# 3. For Cognito setup, see: docs/cognito.md
# 4. Run: ./build_and_run.sh
# 5. Access the registry at: http://localhost:7860 (or your configured URL)
#
# Required for basic functionality:
# - ADMIN_PASSWORD (set to a secure value)
# - COGNITO_USER_POOL_ID, COGNITO_CLIENT_ID, COGNITO_CLIENT_SECRET
#
# Optional but recommended:
# - AUTH_SERVER_EXTERNAL_URL (for external client access)
# - For Financial Info server API keys, see servers/fininfo/README_SECRETS.md